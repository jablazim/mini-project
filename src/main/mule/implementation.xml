<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:batch="http://www.mulesoft.org/schema/mule/batch"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd">
	<db:config name="Database_Config" doc:name="Database Config" doc:id="3d5c3ad6-05db-47c3-b030-38f442133e20" >
		<db:my-sql-connection host="localhost" port="3306" user="root" password="Password01" database="mule" />
	</db:config>
	<flow name="createUserFlow" doc:id="e6924a01-1acd-43d7-ae23-04e6a43dd085" >
		<set-variable value="#[{&#10;	username: payload.username,&#10;	fullname: payload.fullname,&#10;	birthday: payload.birthday as Date {format: 'dd-MM-yyyy'} as String {format: 'yyyy-MM-dd'} as String,&#10;	gender: if(lower(payload.gender) == &quot;male&quot;) &quot;M&quot; else &quot;F&quot;&#10;}]" doc:name="Set User" doc:id="a2837e9e-d542-432d-bdc9-a62a0a380c95" variableName="user"/>
		<logger level="INFO" doc:name="Logger" doc:id="5cd7e859-3742-44c8-b3f1-c2cce637249b" message="insert to Account table"/>
		<db:insert doc:name="Insert" doc:id="89dd3819-93be-43ba-99dd-e2f44b82acee" config-ref="Database_Config" autoGenerateKeys="true" autoGeneratedKeysColumnNames="#[['id']]">
			<db:sql ><![CDATA[INSERT INTO Account (`username`, `active`,`date_registered`) 
VALUES (:username, 1, now());]]></db:sql>
			<db:input-parameters ><![CDATA[#[{ username: vars.user.username }]]]></db:input-parameters>
		</db:insert>
		<logger level="INFO" doc:name="Logger" doc:id="a502e233-afae-47ef-acee-ff15e1979013" message="insert to UserDetails table" />
		<db:insert doc:name="Insert" doc:id="60e1dbc7-235d-4402-b86f-3919c984a405" config-ref="Database_Config">
			<db:sql ><![CDATA[INSERT INTO UserDetails (`userId`, `fullname`, `birthdate`, `gender`) 
VALUES (:id, :fullname, :birthday, :gender)]]></db:sql>
			<db:input-parameters ><![CDATA[#[output application/json 
---
{
	id : payload.generatedKeys.GENERATED_KEY,
	fullname: vars.user.fullname,
	birthday: vars.user.birthday,
	gender: vars.user.gender
}]]]></db:input-parameters>
		</db:insert>
		<ee:transform doc:name="Response" doc:id="4ec93375-2109-4fcb-a2fc-178e9e3d9702" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message: "Success",
	responseCode: 201
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="7416b42d-7a32-40f6-992f-ceedbac37b33" message='#[payload ++ { username: vars.user.username }]'/>
		<error-handler >
			<on-error-continue enableNotifications="true" logException="false" doc:name="On Error Continue" doc:id="63f569c4-45b5-4af4-8731-b7273e92fd0b" type="DB:BAD_SQL_SYNTAX, DB:CONNECTIVITY, DB:RETRY_EXHAUSTED, EXPRESSION, STREAM_MAXIMUM_SIZE_EXCEEDED">
				<ee:transform doc:name="Transform Message" doc:id="c6a7d0d0-5d13-4591-becb-6827c2c7dd27" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message: "System Error",
	responseCode: 500
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<logger level="INFO" doc:name="Logger" doc:id="9907ff56-bdbf-4844-b45f-5cf7cdf8f586" message='#[payload ++ { username: vars.user.username }]'/>
			</on-error-continue>
			<on-error-continue enableNotifications="true" logException="false" doc:name="On Error Continue" doc:id="94d1a067-935c-40e4-93b3-e801996900bd" type="DB:QUERY_EXECUTION">
				<ee:transform doc:name="Transform Message" doc:id="5a95c2fa-4fc8-4b07-85bb-19bcc19b95b8">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	message: "Duplicate Entry [username]",
	responseCode: 500
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<logger level="INFO" doc:name="Logger" doc:id="e44efed5-e7cd-41db-9463-9153c6481359" message="#[payload ++ { username: vars.user.username }]" />
			</on-error-continue>
		</error-handler>
	</flow>
	<flow name="createUsersFlow" doc:id="0d22903a-8802-421c-bcc1-41960a6ffdb3" >
		<foreach doc:name="For Each" doc:id="4767d281-9b65-45ce-b407-4e400f18bb37" collection="#[payload.users]">
			<flow-ref doc:name="Flow Reference" doc:id="8f41fa60-c7f6-4e70-ad8c-09feb63f9822" name="createUserFlow" />
		</foreach>
		<ee:transform doc:name="Response" doc:id="55731785-754d-434f-b9b0-14b1d0a8d2dd">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	message: "Success",
	responseCode: 202
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="getUserFlow" doc:id="315e51c3-b49f-4221-94cf-29680b1ffff8" >
		<db:select doc:name="Select" doc:id="d6a7c235-ff81-4409-8276-f2b97ce2e38f" config-ref="Database_Config" >
			<db:sql ><![CDATA[SELECT A.id, A.username, B.fullname, B.gender, B.birthdate, A.date_registered
FROM Account A
JOIN UserDetails B ON A.id = B.userId
WHERE A.active = 1 AND A.username = :username]]></db:sql>
			<db:input-parameters ><![CDATA[#[{username : attributes.uriParams.username}]]]></db:input-parameters>
		</db:select>
		<choice doc:name="Choice" doc:id="5415f0e4-592c-4799-aab7-4d565aeaeea8" >
			<when expression="#[sizeOf(payload) &gt; 0]">
				<ee:transform doc:name="User to JSON" doc:id="c548ec82-b20f-4611-8087-6d759da61567" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json

import between from dw::core::Periods

fun getAge(birthdate: Date) = do 
{
	var period = between(now() as Date, birthdate)
	---
	period.years
}
---
{
	username: payload[0].username,
	fullname: payload[0].fullname as String,
	age: getAge(payload[0].birthdate as Date),
		gender: if(payload[0].gender == "M") "Male" else "Female",
	dateRegistered: payload[0].date_registered as Date {format: "yyyy/MM/dd"} as String {format: "dd-MM-yyyy"},
	responseCode: 200
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</when>
			<otherwise >
				<ee:transform doc:name="404" doc:id="f21c65b5-5eca-4777-b4e6-400ae05d8cdc" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---

{
	message: "User not found",
	responseCode: 404
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
		<logger level="INFO" doc:name="Logger" doc:id="7ccda993-a520-47e6-a464-fa995a36f713" message="#[payload]" />
	</flow>
	<flow name="getUsersFlow" doc:id="dbf3bbb1-3036-4fc3-b46a-331f6864c8b7" initialState="started">
		<db:select doc:name="Select" doc:id="aad917c5-e7b9-4e14-bea3-31ce909f3457" config-ref="Database_Config">
			<db:sql><![CDATA[SELECT A.id, A.username, B.fullname, B.gender, B.birthdate, A.date_registered
FROM Account A
JOIN UserDetails B ON A.id = B.userId
WHERE A.active = 1]]></db:sql>
		</db:select>
		<ee:transform doc:name="Users to JSON" doc:id="ddf67767-df71-443a-a41b-8315dc690e5e">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json

import between from dw::core::Periods

fun getAge(birthdate: Date) = do 
{
	var period = between(now() as Date, birthdate)
	---
	period.years
}
---

{
	users: payload map ( object , index ) -> {
		username: object.username as String,
		fullname: object.fullname as String,
		age: getAge(object.birthdate as Date),
		gender: if(object.gender == "M") "Male" else "Female",
		dateRegistered: object.date_registered as Date {format: "yyyy/MM/dd"} as String {format: "dd-MM-yyyy"}
	},
	responseCode: 200
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="b95fe1bd-dfe6-404b-bcc6-ef4aee60456d" message="#[payload]" />
		<error-handler >
			<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="5ebeeb13-5b2c-42b0-af29-d8ad0867516c" type="ANY">
				<ee:transform doc:name="Transform Message" doc:id="7c52b7ee-3028-4f52-85b5-85e17a69bf55" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message: "System Error",
	responseCode: 500
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</on-error-propagate>
		</error-handler>
	</flow>
</mule>
